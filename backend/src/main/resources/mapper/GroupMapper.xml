<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.square.mapper.GroupMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="io.square.entity.Group">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="system" property="system" />
        <result column="type" property="type" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="creator" property="creator" />
        <result column="scope_id" property="scopeId" />
    </resultMap>
    <select id="getUserGroup" resultType="io.square.entity.UserGroup">
        select ug.user_id, ug.group_id, ug.source_id, g.`name`, g.type
        from user_group ug join `group` g on ug.group_id = g.id
        where ug.user_id = #{userId}
        <if test="projectId != null">
            and ug.source_id = #{projectId}
        </if>
    </select>
    <select id="getGroupList" resultType="io.square.entity.Group">
        select *,
        (select count(distinct ug.user_id) from user_group ug join user on ug.user_id = user.id where ug.group_id =
        temp.id) as memberSize
        from (
        select g.*, w.name as scopeName from `group` g, workspace w
        <where>
            and g.scope_id = w.id
            <if test="request.types != null and request.types.size() > 0">
                AND g.type in
                <foreach collection="request.types" item="type" separator="," open="(" close=")">
                    #{type}
                </foreach>
            </if>
            <if test="request.scopes != null and request.scopes.size() > 0">
                AND g.scope_id in
                <foreach collection="request.scopes" item="scope" separator="," open="(" close=")">
                    #{scope}
                </foreach>
            </if>
        </where>
        union distinct
        select g.*, 'global' as scopeName from `group` g
        <where>
            g.scope_id = 'global'
            <if test="request.types != null and request.types.size() > 0">
                AND g.type in
                <foreach collection="request.types" item="type" separator="," open="(" close=")">
                    #{type}
                </foreach>
            </if>
        </where>
        ) temp
        <if test="request.name != null and request.name!=''">
            where temp.name like CONCAT('%', #{request.name},'%')
        </if>
        order by field(temp.type, 'SYSTEM', 'ORGANIZATION', 'WORKSPACE', 'PROJECT'), temp.update_time
    </select>

</mapper>
